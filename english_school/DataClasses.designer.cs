#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace english_school
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertGroupe(Groupe instance);
    partial void UpdateGroupe(Groupe instance);
    partial void DeleteGroupe(Groupe instance);
    partial void InsertKind_education(Kind_education instance);
    partial void UpdateKind_education(Kind_education instance);
    partial void DeleteKind_education(Kind_education instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertLevel(Level instance);
    partial void UpdateLevel(Level instance);
    partial void DeleteLevel(Level instance);
    partial void InsertName_course(Name_course instance);
    partial void UpdateName_course(Name_course instance);
    partial void DeleteName_course(Name_course instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::english_school.Properties.Settings.Default.DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Class> Class
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teacher
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contract
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<Course> Course
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Groupe> Groupe
		{
			get
			{
				return this.GetTable<Groupe>();
			}
		}
		
		public System.Data.Linq.Table<Kind_education> Kind_education
		{
			get
			{
				return this.GetTable<Kind_education>();
			}
		}
		
		public System.Data.Linq.Table<Language> Language
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Level> Level
		{
			get
			{
				return this.GetTable<Level>();
			}
		}
		
		public System.Data.Linq.Table<Name_course> Name_course
		{
			get
			{
				return this.GetTable<Name_course>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedule
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<Student> Student
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _class_id;
		
		private System.Nullable<int> _class_number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclass_idChanging(decimal value);
    partial void Onclass_idChanged();
    partial void Onclass_numberChanging(System.Nullable<int> value);
    partial void Onclass_numberChanged();
    #endregion
		
		public Class()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_number", DbType="Int")]
		public System.Nullable<int> class_number
		{
			get
			{
				return this._class_number;
			}
			set
			{
				if ((this._class_number != value))
				{
					this.Onclass_numberChanging(value);
					this.SendPropertyChanging();
					this._class_number = value;
					this.SendPropertyChanged("class_number");
					this.Onclass_numberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _teacher_id;
		
		private string _teacher_name;
		
		private System.Nullable<int> _teacher_phone;
		
		private System.Nullable<decimal> _course_id;
		
		private System.Nullable<decimal> _language_id;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteacher_idChanging(decimal value);
    partial void Onteacher_idChanged();
    partial void Onteacher_nameChanging(string value);
    partial void Onteacher_nameChanged();
    partial void Onteacher_phoneChanging(System.Nullable<int> value);
    partial void Onteacher_phoneChanged();
    partial void Oncourse_idChanging(System.Nullable<decimal> value);
    partial void Oncourse_idChanged();
    partial void Onlanguage_idChanging(System.Nullable<decimal> value);
    partial void Onlanguage_idChanged();
    #endregion
		
		public Teacher()
		{
			this._Course = default(EntityRef<Course>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal teacher_id
		{
			get
			{
				return this._teacher_id;
			}
			set
			{
				if ((this._teacher_id != value))
				{
					this.Onteacher_idChanging(value);
					this.SendPropertyChanging();
					this._teacher_id = value;
					this.SendPropertyChanged("teacher_id");
					this.Onteacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_name", DbType="VarChar(20)")]
		public string teacher_name
		{
			get
			{
				return this._teacher_name;
			}
			set
			{
				if ((this._teacher_name != value))
				{
					this.Onteacher_nameChanging(value);
					this.SendPropertyChanging();
					this._teacher_name = value;
					this.SendPropertyChanged("teacher_name");
					this.Onteacher_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_phone", DbType="Int")]
		public System.Nullable<int> teacher_phone
		{
			get
			{
				return this._teacher_phone;
			}
			set
			{
				if ((this._teacher_phone != value))
				{
					this.Onteacher_phoneChanging(value);
					this.SendPropertyChanging();
					this._teacher_phone = value;
					this.SendPropertyChanged("teacher_phone");
					this.Onteacher_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> language_id
		{
			get
			{
				return this._language_id;
			}
			set
			{
				if ((this._language_id != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlanguage_idChanging(value);
					this.SendPropertyChanging();
					this._language_id = value;
					this.SendPropertyChanged("language_id");
					this.Onlanguage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Teacher", Storage="_Course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Teacher.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Teacher.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Teacher", Storage="_Language", ThisKey="language_id", OtherKey="language_id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Teacher.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Teacher.Add(this);
						this._language_id = value.language_id;
					}
					else
					{
						this._language_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _contract_id;
		
		private string _contract_number;
		
		private System.Nullable<System.DateTime> _contract_date;
		
		private EntitySet<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontract_idChanging(decimal value);
    partial void Oncontract_idChanged();
    partial void Oncontract_numberChanging(string value);
    partial void Oncontract_numberChanged();
    partial void Oncontract_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncontract_dateChanged();
    #endregion
		
		public Contract()
		{
			this._Student = new EntitySet<Student>(new Action<Student>(this.attach_Student), new Action<Student>(this.detach_Student));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal contract_id
		{
			get
			{
				return this._contract_id;
			}
			set
			{
				if ((this._contract_id != value))
				{
					this.Oncontract_idChanging(value);
					this.SendPropertyChanging();
					this._contract_id = value;
					this.SendPropertyChanged("contract_id");
					this.Oncontract_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_number", DbType="VarChar(20)")]
		public string contract_number
		{
			get
			{
				return this._contract_number;
			}
			set
			{
				if ((this._contract_number != value))
				{
					this.Oncontract_numberChanging(value);
					this.SendPropertyChanging();
					this._contract_number = value;
					this.SendPropertyChanged("contract_number");
					this.Oncontract_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_date", DbType="Date")]
		public System.Nullable<System.DateTime> contract_date
		{
			get
			{
				return this._contract_date;
			}
			set
			{
				if ((this._contract_date != value))
				{
					this.Oncontract_dateChanging(value);
					this.SendPropertyChanging();
					this._contract_date = value;
					this.SendPropertyChanged("contract_date");
					this.Oncontract_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Student", Storage="_Student", ThisKey="contract_id", OtherKey="contract_id")]
		public EntitySet<Student> Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				this._Student.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _course_id;
		
		private System.Nullable<int> _course_duration;
		
		private System.Nullable<int> _course_cost;
		
		private System.Nullable<decimal> _name_course_id;
		
		private System.Nullable<decimal> _level_id;
		
		private EntitySet<Teacher> _Teacher;
		
		private EntitySet<Student> _Student;
		
		private EntityRef<Level> _Level;
		
		private EntityRef<Name_course> _Name_course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(decimal value);
    partial void Oncourse_idChanged();
    partial void Oncourse_durationChanging(System.Nullable<int> value);
    partial void Oncourse_durationChanged();
    partial void Oncourse_costChanging(System.Nullable<int> value);
    partial void Oncourse_costChanged();
    partial void Onname_course_idChanging(System.Nullable<decimal> value);
    partial void Onname_course_idChanged();
    partial void Onlevel_idChanging(System.Nullable<decimal> value);
    partial void Onlevel_idChanged();
    #endregion
		
		public Course()
		{
			this._Teacher = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teacher), new Action<Teacher>(this.detach_Teacher));
			this._Student = new EntitySet<Student>(new Action<Student>(this.attach_Student), new Action<Student>(this.detach_Student));
			this._Level = default(EntityRef<Level>);
			this._Name_course = default(EntityRef<Name_course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_duration", DbType="Int")]
		public System.Nullable<int> course_duration
		{
			get
			{
				return this._course_duration;
			}
			set
			{
				if ((this._course_duration != value))
				{
					this.Oncourse_durationChanging(value);
					this.SendPropertyChanging();
					this._course_duration = value;
					this.SendPropertyChanged("course_duration");
					this.Oncourse_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_cost", DbType="Int")]
		public System.Nullable<int> course_cost
		{
			get
			{
				return this._course_cost;
			}
			set
			{
				if ((this._course_cost != value))
				{
					this.Oncourse_costChanging(value);
					this.SendPropertyChanging();
					this._course_cost = value;
					this.SendPropertyChanged("course_cost");
					this.Oncourse_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_course_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> name_course_id
		{
			get
			{
				return this._name_course_id;
			}
			set
			{
				if ((this._name_course_id != value))
				{
					if (this._Name_course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onname_course_idChanging(value);
					this.SendPropertyChanging();
					this._name_course_id = value;
					this.SendPropertyChanged("name_course_id");
					this.Onname_course_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> level_id
		{
			get
			{
				return this._level_id;
			}
			set
			{
				if ((this._level_id != value))
				{
					if (this._Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlevel_idChanging(value);
					this.SendPropertyChanging();
					this._level_id = value;
					this.SendPropertyChanged("level_id");
					this.Onlevel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Teacher", Storage="_Teacher", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<Teacher> Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				this._Teacher.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Student", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<Student> Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				this._Student.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_Course", Storage="_Level", ThisKey="level_id", OtherKey="level_id", IsForeignKey=true)]
		public Level Level
		{
			get
			{
				return this._Level.Entity;
			}
			set
			{
				Level previousValue = this._Level.Entity;
				if (((previousValue != value) 
							|| (this._Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level.Entity = null;
						previousValue.Course.Remove(this);
					}
					this._Level.Entity = value;
					if ((value != null))
					{
						value.Course.Add(this);
						this._level_id = value.level_id;
					}
					else
					{
						this._level_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Level");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Name_course_Course", Storage="_Name_course", ThisKey="name_course_id", OtherKey="name_course_id", IsForeignKey=true)]
		public Name_course Name_course
		{
			get
			{
				return this._Name_course.Entity;
			}
			set
			{
				Name_course previousValue = this._Name_course.Entity;
				if (((previousValue != value) 
							|| (this._Name_course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Name_course.Entity = null;
						previousValue.Course.Remove(this);
					}
					this._Name_course.Entity = value;
					if ((value != null))
					{
						value.Course.Add(this);
						this._name_course_id = value.name_course_id;
					}
					else
					{
						this._name_course_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Name_course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teacher(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Teacher(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groupe")]
	public partial class Groupe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _group_id;
		
		private System.Nullable<System.DateTime> _group_start;
		
		private System.Nullable<System.DateTime> _group_finish;
		
		private System.Nullable<decimal> _course_id;
		
		private System.Nullable<decimal> _teacher_id;
		
		private System.Nullable<decimal> _kind_education_id;
		
		private System.Nullable<decimal> _status_id;
		
		private EntitySet<Student> _Student;
		
		private EntityRef<Kind_education> _Kind_education;
		
		private EntityRef<Status> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_idChanging(decimal value);
    partial void Ongroup_idChanged();
    partial void Ongroup_startChanging(System.Nullable<System.DateTime> value);
    partial void Ongroup_startChanged();
    partial void Ongroup_finishChanging(System.Nullable<System.DateTime> value);
    partial void Ongroup_finishChanged();
    partial void Oncourse_idChanging(System.Nullable<decimal> value);
    partial void Oncourse_idChanged();
    partial void Onteacher_idChanging(System.Nullable<decimal> value);
    partial void Onteacher_idChanged();
    partial void Onkind_education_idChanging(System.Nullable<decimal> value);
    partial void Onkind_education_idChanged();
    partial void Onstatus_idChanging(System.Nullable<decimal> value);
    partial void Onstatus_idChanged();
    #endregion
		
		public Groupe()
		{
			this._Student = new EntitySet<Student>(new Action<Student>(this.attach_Student), new Action<Student>(this.detach_Student));
			this._Kind_education = default(EntityRef<Kind_education>);
			this._Status = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_start", DbType="Date")]
		public System.Nullable<System.DateTime> group_start
		{
			get
			{
				return this._group_start;
			}
			set
			{
				if ((this._group_start != value))
				{
					this.Ongroup_startChanging(value);
					this.SendPropertyChanging();
					this._group_start = value;
					this.SendPropertyChanged("group_start");
					this.Ongroup_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_finish", DbType="Date")]
		public System.Nullable<System.DateTime> group_finish
		{
			get
			{
				return this._group_finish;
			}
			set
			{
				if ((this._group_finish != value))
				{
					this.Ongroup_finishChanging(value);
					this.SendPropertyChanging();
					this._group_finish = value;
					this.SendPropertyChanged("group_finish");
					this.Ongroup_finishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> teacher_id
		{
			get
			{
				return this._teacher_id;
			}
			set
			{
				if ((this._teacher_id != value))
				{
					this.Onteacher_idChanging(value);
					this.SendPropertyChanging();
					this._teacher_id = value;
					this.SendPropertyChanged("teacher_id");
					this.Onteacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind_education_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> kind_education_id
		{
			get
			{
				return this._kind_education_id;
			}
			set
			{
				if ((this._kind_education_id != value))
				{
					if (this._Kind_education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkind_education_idChanging(value);
					this.SendPropertyChanging();
					this._kind_education_id = value;
					this.SendPropertyChanged("kind_education_id");
					this.Onkind_education_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Groupe_Student", Storage="_Student", ThisKey="group_id", OtherKey="group_id")]
		public EntitySet<Student> Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				this._Student.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_education_Groupe", Storage="_Kind_education", ThisKey="kind_education_id", OtherKey="kind_education_id", IsForeignKey=true)]
		public Kind_education Kind_education
		{
			get
			{
				return this._Kind_education.Entity;
			}
			set
			{
				Kind_education previousValue = this._Kind_education.Entity;
				if (((previousValue != value) 
							|| (this._Kind_education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kind_education.Entity = null;
						previousValue.Groupe.Remove(this);
					}
					this._Kind_education.Entity = value;
					if ((value != null))
					{
						value.Groupe.Add(this);
						this._kind_education_id = value.kind_education_id;
					}
					else
					{
						this._kind_education_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Kind_education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Groupe", Storage="_Status", ThisKey="status_id", OtherKey="status_id", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.Groupe.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.Groupe.Add(this);
						this._status_id = value.status_id;
					}
					else
					{
						this._status_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Groupe = this;
		}
		
		private void detach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Groupe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kind_education")]
	public partial class Kind_education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _kind_education_id;
		
		private string _kind_education_name;
		
		private EntitySet<Groupe> _Groupe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onkind_education_idChanging(decimal value);
    partial void Onkind_education_idChanged();
    partial void Onkind_education_nameChanging(string value);
    partial void Onkind_education_nameChanged();
    #endregion
		
		public Kind_education()
		{
			this._Groupe = new EntitySet<Groupe>(new Action<Groupe>(this.attach_Groupe), new Action<Groupe>(this.detach_Groupe));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind_education_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal kind_education_id
		{
			get
			{
				return this._kind_education_id;
			}
			set
			{
				if ((this._kind_education_id != value))
				{
					this.Onkind_education_idChanging(value);
					this.SendPropertyChanging();
					this._kind_education_id = value;
					this.SendPropertyChanged("kind_education_id");
					this.Onkind_education_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind_education_name", DbType="VarChar(20)")]
		public string kind_education_name
		{
			get
			{
				return this._kind_education_name;
			}
			set
			{
				if ((this._kind_education_name != value))
				{
					this.Onkind_education_nameChanging(value);
					this.SendPropertyChanging();
					this._kind_education_name = value;
					this.SendPropertyChanged("kind_education_name");
					this.Onkind_education_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_education_Groupe", Storage="_Groupe", ThisKey="kind_education_id", OtherKey="kind_education_id")]
		public EntitySet<Groupe> Groupe
		{
			get
			{
				return this._Groupe;
			}
			set
			{
				this._Groupe.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groupe(Groupe entity)
		{
			this.SendPropertyChanging();
			entity.Kind_education = this;
		}
		
		private void detach_Groupe(Groupe entity)
		{
			this.SendPropertyChanging();
			entity.Kind_education = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _language_id;
		
		private string _language_name;
		
		private EntitySet<Teacher> _Teacher;
		
		private EntitySet<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlanguage_idChanging(decimal value);
    partial void Onlanguage_idChanged();
    partial void Onlanguage_nameChanging(string value);
    partial void Onlanguage_nameChanged();
    #endregion
		
		public Language()
		{
			this._Teacher = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teacher), new Action<Teacher>(this.detach_Teacher));
			this._Student = new EntitySet<Student>(new Action<Student>(this.attach_Student), new Action<Student>(this.detach_Student));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal language_id
		{
			get
			{
				return this._language_id;
			}
			set
			{
				if ((this._language_id != value))
				{
					this.Onlanguage_idChanging(value);
					this.SendPropertyChanging();
					this._language_id = value;
					this.SendPropertyChanged("language_id");
					this.Onlanguage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_name", DbType="VarChar(20)")]
		public string language_name
		{
			get
			{
				return this._language_name;
			}
			set
			{
				if ((this._language_name != value))
				{
					this.Onlanguage_nameChanging(value);
					this.SendPropertyChanging();
					this._language_name = value;
					this.SendPropertyChanged("language_name");
					this.Onlanguage_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Teacher", Storage="_Teacher", ThisKey="language_id", OtherKey="language_id")]
		public EntitySet<Teacher> Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				this._Teacher.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Student", Storage="_Student", ThisKey="language_id", OtherKey="language_id")]
		public EntitySet<Student> Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				this._Student.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teacher(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Teacher(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Student(Student entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Level]")]
	public partial class Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _level_id;
		
		private string _level_name;
		
		private EntitySet<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlevel_idChanging(decimal value);
    partial void Onlevel_idChanged();
    partial void Onlevel_nameChanging(string value);
    partial void Onlevel_nameChanged();
    #endregion
		
		public Level()
		{
			this._Course = new EntitySet<Course>(new Action<Course>(this.attach_Course), new Action<Course>(this.detach_Course));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal level_id
		{
			get
			{
				return this._level_id;
			}
			set
			{
				if ((this._level_id != value))
				{
					this.Onlevel_idChanging(value);
					this.SendPropertyChanging();
					this._level_id = value;
					this.SendPropertyChanged("level_id");
					this.Onlevel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_name", DbType="VarChar(20)")]
		public string level_name
		{
			get
			{
				return this._level_name;
			}
			set
			{
				if ((this._level_name != value))
				{
					this.Onlevel_nameChanging(value);
					this.SendPropertyChanging();
					this._level_name = value;
					this.SendPropertyChanged("level_name");
					this.Onlevel_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_Course", Storage="_Course", ThisKey="level_id", OtherKey="level_id")]
		public EntitySet<Course> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				this._Course.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Level = this;
		}
		
		private void detach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Level = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Name_course")]
	public partial class Name_course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _name_course_id;
		
		private string _name_course_name;
		
		private EntitySet<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onname_course_idChanging(decimal value);
    partial void Onname_course_idChanged();
    partial void Onname_course_nameChanging(string value);
    partial void Onname_course_nameChanged();
    #endregion
		
		public Name_course()
		{
			this._Course = new EntitySet<Course>(new Action<Course>(this.attach_Course), new Action<Course>(this.detach_Course));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_course_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal name_course_id
		{
			get
			{
				return this._name_course_id;
			}
			set
			{
				if ((this._name_course_id != value))
				{
					this.Onname_course_idChanging(value);
					this.SendPropertyChanging();
					this._name_course_id = value;
					this.SendPropertyChanged("name_course_id");
					this.Onname_course_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_course_name", DbType="VarChar(20)")]
		public string name_course_name
		{
			get
			{
				return this._name_course_name;
			}
			set
			{
				if ((this._name_course_name != value))
				{
					this.Onname_course_nameChanging(value);
					this.SendPropertyChanging();
					this._name_course_name = value;
					this.SendPropertyChanged("name_course_name");
					this.Onname_course_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Name_course_Course", Storage="_Course", ThisKey="name_course_id", OtherKey="name_course_id")]
		public EntitySet<Course> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				this._Course.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Name_course = this;
		}
		
		private void detach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Name_course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _schedule_id;
		
		private System.Nullable<System.DateTime> _schedule_date;
		
		private System.Nullable<decimal> _group_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onschedule_idChanging(decimal value);
    partial void Onschedule_idChanged();
    partial void Onschedule_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onschedule_dateChanged();
    partial void Ongroup_idChanging(System.Nullable<decimal> value);
    partial void Ongroup_idChanged();
    #endregion
		
		public Schedule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_date", DbType="Date")]
		public System.Nullable<System.DateTime> schedule_date
		{
			get
			{
				return this._schedule_date;
			}
			set
			{
				if ((this._schedule_date != value))
				{
					this.Onschedule_dateChanging(value);
					this.SendPropertyChanging();
					this._schedule_date = value;
					this.SendPropertyChanged("schedule_date");
					this.Onschedule_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _status_id;
		
		private string _status_name;
		
		private EntitySet<Groupe> _Groupe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstatus_idChanging(decimal value);
    partial void Onstatus_idChanged();
    partial void Onstatus_nameChanging(string value);
    partial void Onstatus_nameChanged();
    #endregion
		
		public Status()
		{
			this._Groupe = new EntitySet<Groupe>(new Action<Groupe>(this.attach_Groupe), new Action<Groupe>(this.detach_Groupe));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_name", DbType="VarChar(20)")]
		public string status_name
		{
			get
			{
				return this._status_name;
			}
			set
			{
				if ((this._status_name != value))
				{
					this.Onstatus_nameChanging(value);
					this.SendPropertyChanging();
					this._status_name = value;
					this.SendPropertyChanged("status_name");
					this.Onstatus_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Groupe", Storage="_Groupe", ThisKey="status_id", OtherKey="status_id")]
		public EntitySet<Groupe> Groupe
		{
			get
			{
				return this._Groupe;
			}
			set
			{
				this._Groupe.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groupe(Groupe entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_Groupe(Groupe entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _student_id;
		
		private string _student_name;
		
		private System.Nullable<System.DateTime> _student_birthday;
		
		private string _student_adress;
		
		private System.Nullable<int> _student_phone;
		
		private System.Nullable<int> _student_passport;
		
		private System.Nullable<decimal> _course_id;
		
		private System.Nullable<decimal> _contract_id;
		
		private System.Nullable<decimal> _group_id;
		
		private System.Nullable<decimal> _level_id;
		
		private System.Nullable<decimal> _language_id;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Groupe> _Groupe;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_idChanging(decimal value);
    partial void Onstudent_idChanged();
    partial void Onstudent_nameChanging(string value);
    partial void Onstudent_nameChanged();
    partial void Onstudent_birthdayChanging(System.Nullable<System.DateTime> value);
    partial void Onstudent_birthdayChanged();
    partial void Onstudent_adressChanging(string value);
    partial void Onstudent_adressChanged();
    partial void Onstudent_phoneChanging(System.Nullable<int> value);
    partial void Onstudent_phoneChanged();
    partial void Onstudent_passportChanging(System.Nullable<int> value);
    partial void Onstudent_passportChanged();
    partial void Oncourse_idChanging(System.Nullable<decimal> value);
    partial void Oncourse_idChanged();
    partial void Oncontract_idChanging(System.Nullable<decimal> value);
    partial void Oncontract_idChanged();
    partial void Ongroup_idChanging(System.Nullable<decimal> value);
    partial void Ongroup_idChanged();
    partial void Onlevel_idChanging(System.Nullable<decimal> value);
    partial void Onlevel_idChanged();
    partial void Onlanguage_idChanging(System.Nullable<decimal> value);
    partial void Onlanguage_idChanged();
    #endregion
		
		public Student()
		{
			this._Course = default(EntityRef<Course>);
			this._Contract = default(EntityRef<Contract>);
			this._Groupe = default(EntityRef<Groupe>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(20)")]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this.Onstudent_nameChanging(value);
					this.SendPropertyChanging();
					this._student_name = value;
					this.SendPropertyChanged("student_name");
					this.Onstudent_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> student_birthday
		{
			get
			{
				return this._student_birthday;
			}
			set
			{
				if ((this._student_birthday != value))
				{
					this.Onstudent_birthdayChanging(value);
					this.SendPropertyChanging();
					this._student_birthday = value;
					this.SendPropertyChanged("student_birthday");
					this.Onstudent_birthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_adress", DbType="VarChar(40)")]
		public string student_adress
		{
			get
			{
				return this._student_adress;
			}
			set
			{
				if ((this._student_adress != value))
				{
					this.Onstudent_adressChanging(value);
					this.SendPropertyChanging();
					this._student_adress = value;
					this.SendPropertyChanged("student_adress");
					this.Onstudent_adressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_phone", DbType="Int")]
		public System.Nullable<int> student_phone
		{
			get
			{
				return this._student_phone;
			}
			set
			{
				if ((this._student_phone != value))
				{
					this.Onstudent_phoneChanging(value);
					this.SendPropertyChanging();
					this._student_phone = value;
					this.SendPropertyChanged("student_phone");
					this.Onstudent_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_passport", DbType="Int")]
		public System.Nullable<int> student_passport
		{
			get
			{
				return this._student_passport;
			}
			set
			{
				if ((this._student_passport != value))
				{
					this.Onstudent_passportChanging(value);
					this.SendPropertyChanging();
					this._student_passport = value;
					this.SendPropertyChanged("student_passport");
					this.Onstudent_passportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> contract_id
		{
			get
			{
				return this._contract_id;
			}
			set
			{
				if ((this._contract_id != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontract_idChanging(value);
					this.SendPropertyChanging();
					this._contract_id = value;
					this.SendPropertyChanged("contract_id");
					this.Oncontract_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._Groupe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> level_id
		{
			get
			{
				return this._level_id;
			}
			set
			{
				if ((this._level_id != value))
				{
					this.Onlevel_idChanging(value);
					this.SendPropertyChanging();
					this._level_id = value;
					this.SendPropertyChanged("level_id");
					this.Onlevel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> language_id
		{
			get
			{
				return this._language_id;
			}
			set
			{
				if ((this._language_id != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlanguage_idChanging(value);
					this.SendPropertyChanging();
					this._language_id = value;
					this.SendPropertyChanged("language_id");
					this.Onlanguage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Student.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Student.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Student", Storage="_Contract", ThisKey="contract_id", OtherKey="contract_id", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.Student.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.Student.Add(this);
						this._contract_id = value.contract_id;
					}
					else
					{
						this._contract_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Groupe_Student", Storage="_Groupe", ThisKey="group_id", OtherKey="group_id", IsForeignKey=true)]
		public Groupe Groupe
		{
			get
			{
				return this._Groupe.Entity;
			}
			set
			{
				Groupe previousValue = this._Groupe.Entity;
				if (((previousValue != value) 
							|| (this._Groupe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Groupe.Entity = null;
						previousValue.Student.Remove(this);
					}
					this._Groupe.Entity = value;
					if ((value != null))
					{
						value.Student.Add(this);
						this._group_id = value.group_id;
					}
					else
					{
						this._group_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Groupe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Student", Storage="_Language", ThisKey="language_id", OtherKey="language_id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Student.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Student.Add(this);
						this._language_id = value.language_id;
					}
					else
					{
						this._language_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
